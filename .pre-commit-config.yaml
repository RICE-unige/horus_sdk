# Pre-commit configuration for HORUS SDK
# This runs the same checks as CI/CD locally before commits

repos:
  # Basic file checks (exclude generated files)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: '.*\.(md|rst)$|^horus_ros2_ws/(build|install|log)/'
      - id: end-of-file-fixer
        exclude: '^horus_ros2_ws/(build|install|log)/'
      - id: check-yaml
        exclude: '^horus_ros2_ws/(build|install|log)/'
      - id: check-json
        exclude: '^horus_ros2_ws/(build|install|log)/'
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']

  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3
        files: \.(py)$
        exclude: '^horus_ros2_ws/(build|install|log)/|.*launch\.py$|^examples/'

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]
        files: \.(py)$
        exclude: '^horus_ros2_ws/(build|install|log)/|^examples/'

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=99', '--extend-ignore=E203,W503,Q000,F401,F841,F541,E501,E402,E722']
        files: \.(py)$
        exclude: '^horus_ros2_ws/(build|install|log)/|^examples/'

  # MyPy type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
      - id: mypy
        files: ^python/
        args: [--ignore-missing-imports, --no-strict-optional]
        additional_dependencies: [types-requests]

  # ROS2-specific comprehensive checks
  - repo: local
    hooks:
      # C++ linting with cpplint (exact CI/CD match)
      - id: ament-cpplint
        name: ament-cpplint
        entry: bash -c 'cd horus_ros2_ws && source /opt/ros/humble/setup.bash && ament_cpplint src/'
        language: system
        files: ^horus_ros2_ws/src/.*\.(cpp|hpp)$
        pass_filenames: false

      # Python flake8 via ament (matches CI/CD exactly)
      - id: ament-flake8
        name: ament-flake8
        entry: bash -c 'cd horus_ros2_ws && source /opt/ros/humble/setup.bash && ament_flake8 src/horus_backend/ src/horus_interfaces/'
        language: system
        files: ^horus_ros2_ws/src/(horus_backend|horus_interfaces)/.*\.(py)$
        pass_filenames: false

      # Uncrustify formatting (exact CI/CD match)
      - id: ament-uncrustify
        name: ament-uncrustify
        entry: bash -c 'cd horus_ros2_ws && source /opt/ros/humble/setup.bash && ament_uncrustify --reformat'
        language: system
        files: ^horus_ros2_ws/src/.*\.(cpp|hpp)$
        pass_filenames: false

      # CMake linting
      - id: ament-lint-cmake
        name: ament-lint-cmake
        entry: bash -c 'cd horus_ros2_ws && source /opt/ros/humble/setup.bash && ament_lint_cmake'
        language: system
        files: ^horus_ros2_ws/CMakeLists\.txt$
        pass_filenames: false

      # XML linting for package.xml files
      - id: ament-xmllint
        name: ament-xmllint
        entry: bash -c 'cd horus_ros2_ws && source /opt/ros/humble/setup.bash && ament_xmllint'
        language: system
        files: ^horus_ros2_ws/.*package\.xml$
        pass_filenames: false

      # Build check (most important - ensures code compiles)
      - id: colcon-build
        name: colcon-build
        entry: bash -c 'cd horus_ros2_ws && source /opt/ros/humble/setup.bash && colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release'
        language: system
        files: ^horus_ros2_ws/src/.*\.(cpp|hpp|py|xml|txt)$
        pass_filenames: false

      # ROS2 tests
      - id: colcon-test
        name: colcon-test
        entry: bash -c 'cd horus_ros2_ws && source install/setup.bash && colcon test --packages-select horus_backend horus_interfaces'
        language: system
        files: ^horus_ros2_ws/src/.*\.(cpp|hpp|py|xml|txt)$
        pass_filenames: false

      # Python SDK tests
      - id: pytest-sdk
        name: pytest-sdk
        entry: bash -c 'cd python && python3 -m pytest tests/ -v --tb=short'
        language: system
        files: ^python/.*\.(py)$
        pass_filenames: false
